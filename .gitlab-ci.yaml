image: docker:latest

variables:
  REPOSITORY_URL: 328527480917.dkr.ecr.us-east-1.amazonaws.com/appwindows
  
services:
- docker:dind

before_script:
  - apk add --no-cache curl jq python3 py3-pip
  - apk update awscli
  - pip install awscli
  - aws s3 ls
  - IMAGE_TAG="$(echo $CI_COMMIT_SHA | head -c 8)"


stages:
  - test
  - package
  - build
  - deploy-homolog
  - deploy-develop
  - deploy

package site:
  stage: package
  cache:
    key: site-package
    policy: push
    paths:
      - ./builds/clayton.souza/appwindows
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_REF_NAME"
    when: always
    expire_in: 2h20min
    paths:
      - views
  script:
    - pwd

build:
  stage: build
  script:
    - $(aws ecr get-login --no-include-email --region us-east-1)
    - docker build -t $REPOSITORY_URL:vgitlabci.2.
    - echo "Tagging image..."
    - docker tag $REPOSITORY_URL:vgitlabci.2 $REPOSITORY_URL:$IMAGE_TAG
    - echo "Pushing image..."
    - docker push $REPOSITORY_URL:vgitlabci.2
    - docker push $REPOSITORY_URL:$IMAGE_TAG
    - docker push $REPOSITORY_URL
  only:
    - master
  tags:
    - docker
    
deploy:
  stage: deploy
  script:
    - echo $REPOSITORY_URL:$IMAGE_TAG
    - TASK_DEFINITION=$(aws ecs describe-task-definition --task-definition "$TASK_DEFINTION_NAME" --region "${REGION}")
    - NEW_CONTAINER_DEFINTIION=$(echo $TASK_DEFINITION | jq --arg IMAGE "$REPOSITORY_URL:$IMAGE_TAG" '.taskDefinition.containerDefinitions[0].image = $IMAGE | .taskDefinition.containerDefinitions[0]')
    - echo "Registering new container definition..."
    - aws ecs register-task-definition --region "${REGION}" --family "${TASK_DEFINTION_NAME}" --container-definitions "${NEW_CONTAINER_DEFINTIION}"
    - echo "Updating the service..."
    - aws ecs update-service --region "${REGION}" --cluster "${CLUSTER_NAME}" --service "${SERVICE_NAME}"  --task-definition "${TASK_DEFINTION_NAME}"
  only:
    - master

